diff --git a/mediaelement.field.inc b/mediaelement.field.inc
index dbdf054..0dd444f 100644
--- a/mediaelement.field.inc
+++ b/mediaelement.field.inc
@@ -20,6 +20,7 @@ function mediaelement_field_formatter_info() {
       'height' => variable_get('mediaelement_video_default_height', '385'),
       'download_link' => variable_get('mediaelement_video_default_download_link', FALSE),
       'download_text' => variable_get('mediaelement_video_default_download_text', t('Download')),
+      'preload' => variable_get('mediaelement_video_default_preload', 'none'),
     ),
   );
 
@@ -32,6 +33,7 @@ function mediaelement_field_formatter_info() {
       'height' => variable_get('mediaelement_audio_default_height', '30'),
       'download_link' => variable_get('mediaelement_audio_default_download_link', FALSE),
       'download_text' => variable_get('mediaelement_audio_default_download_text', t('Download')),
+      'preload' => variable_get('mediaelement_audio_default_preload', 'none'),
     ),
   );
 
@@ -75,6 +77,18 @@ function mediaelement_field_formatter_settings_form($field, $instance, $view_mod
     '#type' => 'textfield',
     '#default_value' => $settings['download_text'],
   );
+
+  $element['preload'] = array(
+    '#title' => t('Preload'),
+    '#description' => t('Provide a hint to the user agent about whether it should pre-load the media resource.'),
+    '#type' => 'radios',
+    '#options' => array(
+      'none' => t('None: Do not preload the resource.'),
+      'metadata' => t('Metadata: Load only the resource metadata (dimensions, first frame, track list, duration, etc). May cause full preload.'),
+      'auto' => t('Automatic: Preload is possible.'),
+    ),
+    '#default_value' => $settings['preload'],
+  );
 
   return $element;
 }
@@ -85,7 +99,10 @@ function mediaelement_field_formatter_settings_form($field, $instance, $view_mod
 function mediaelement_field_formatter_settings_summary($field, $instance, $view_mode) {
   $display = $instance['display'][$view_mode];
   $settings = $display['settings'];
-  return t('Width: @width px, Height: @height px', array('@width' => $settings['width'], '@height' => $settings['height']));
+  return t('Width: @width px, Height: @height px, Preload: @preload',
+           array('@width' => $settings['width'],
+                 '@height' => $settings['height'],
+                 '@preload' => $settings['preload']));
 }
 
 /**
@@ -119,6 +136,7 @@ function mediaelement_field_formatter_view($entity_type, $entity, $field, $insta
       '#attributes' => array(
         'src' => file_create_url($src),
         'class' => $class,
+        'preload' => $display['settings']['preload'],
       ),
       '#settings' => $settings,
       '#attached' => array(
diff --git a/mediaelement.install b/mediaelement.install
index 68cee3d..b596cb4 100644
--- a/mediaelement.install
+++ b/mediaelement.install
@@ -16,10 +16,12 @@ function mediaelement_uninstall() {
   variable_del('mediaelement_audio_default_class');
   variable_del('mediaelement_audio_default_download_link');
   variable_del('mediaelement_audio_default_download_text');
+  variable_del('mediaelement_audio_default_preload');
   variable_del('mediaelement_video_default_controls');
   variable_del('mediaelement_video_default_width');
   variable_del('mediaelement_video_default_height');
   variable_del('mediaelement_video_default_class');
   variable_del('mediaelement_video_default_download_link');
   variable_del('mediaelement_video_default_download_text');
+  variable_del('mediaelement_video_default_preload');
 }
